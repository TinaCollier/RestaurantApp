{"ast":null,"code":"var _jsxFileName = \"/Users/tinacollier/Desktop/MITprojects/Portfolios/RestaurantApp/components/restaurantList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(0);\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${data.restaurants}`);\n  let searchQuery = data.restaurants.filter(res => {\n    return res.name.toLowerCase().includes(props.search);\n  });\n  let restId = searchQuery[0].id; // definet renderer for Dishes\n\n  const renderDishes = restaurantID => {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \" \");\n  };\n\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: `http://localhost:1337` + res.image.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      onClick: () => setRestaurantID(res.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, res.name)))));\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, restList), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, renderDishes(restaurantID)));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\nexport default RestaurantList;","map":{"version":3,"names":["gql","useQuery","Dishes","useContext","useState","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","restId","id","renderDishes","length","restList","map","margin","height","image","url","description"],"sources":["/Users/tinacollier/Desktop/MITprojects/Portfolios/RestaurantApp/components/restaurantList.js"],"sourcesContent":["import {gql,useQuery} from '@apollo/client';\nimport Dishes from \"./dishes\"\nimport {useContext, useState} from 'react';\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col} from \"reactstrap\";\n\nfunction RestaurantList(props){\n  const[restaurantID, setRestaurantID] = useState(0)\n  const {cart } = useContext(AppContext);\n  const [state, setState] = useState(cart)\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS)\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`)\n\n\nlet searchQuery = data.restaurants.filter((res) =>{\n    return res.name.toLowerCase().includes(props.search)\n  })\n\nlet restId = searchQuery[0].id\n \n// definet renderer for Dishes\n  const renderDishes = (restaurantID) => {\n    return (<Dishes restId={restaurantID}> </Dishes>)\n  };\nif(searchQuery.length > 0){\n  const restList = searchQuery.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={\n          `http://localhost:1337`+ res.image.url\n          }\n        />\n        <CardBody>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n        \n        <Button color=\"info\" onClick={()=> setRestaurantID(res.id)}>{res.name}</Button>\n         \n        </div>\n      </Card>\n    </Col>\n  ))\n\n  return(\n\n    <Container>\n    <Row xs='3'>\n      {restList}\n    </Row>\n  \n    <Row xs='3'>\n    {renderDishes(restaurantID)}\n    </Row>\n \n    </Container>\n \n  )\n} else {\n  return <h1> No Restaurants Found</h1>\n}\n}\n   export default RestaurantList"],"mappings":"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"},"metadata":{},"sourceType":"module"}